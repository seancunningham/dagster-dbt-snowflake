# Primary dbt project configuration. This is the contract between analytics code
# and the orchestrator, so both platform and data engineers should review changes
# carefully when altering paths, groups, or flags.
name: 'dbt_core'
version: '1.0.0'

query-comment:
  # Embed metadata so downstream observability tools can tie queries back to Dagster
  # runs and dbt nodes.
  comment: "snowflake_dagster_dbt_v1_opaque_id[[[{{ node.unique_id }}:{{ invocation_id }}]]]"
  append: true

# `profile` must align with the entry in profiles.yml so dbt knows how to connect
# to Snowflake.
profile: 'dbt'

# Folder mappings that control how dbt discovers resources. Update in tandem with
# the repository structure documented in README.md.
model-paths: ["models", "groups"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

dispatch:
  - macro_namespace: dbt
    search_order: ['dbt_core', 'dbt_snowflake', 'dbt']

clean-targets:
  - "target"
  - "dbt_packages"

models:
  +persist_docs:
    relation: true
    columns: true
  dbt_core:
    +group: data_foundation

    staging:
      +group: data_foundation

    intermediate:
      int_marketing:
        +group: marketing

    marts:
      mrt_marketing:
        +group: marketing

tests:
  dbt_core:
    +group: data_foundation

seeds:
  +persist_docs:
    relation: true
    columns: true
  dbt_core:
    +group: data_foundation

    mrt_marketing:
      +group: marketing

snapshots:
  +persist_docs:
      relation: true
      columns: true
  dbt_core:
    +group: data_foundation

flags:
  # Enforce explicit arguments on generic tests to avoid ambiguous macros.
  require_generic_test_arguments_property: true
